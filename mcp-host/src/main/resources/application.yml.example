server:
  port: 8087

spring:
  application:
    name: mcp-host
  datasource:
    url: jdbc:mysql://localhost:3306/mcp?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC&createDatabaseIfNotExist=true
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
  sql:
    init:
      mode: never
      schema-locations: classpath:schema.sql

mybatis:
  mapper-locations: classpath*:mapper/system/*.xml
  type-aliases-package: com.mcp.host.domain

# MCP 客户端 gRPC 配置
mcp:
  client:
    grpc:
      host: localhost
      port: 8686
      timeout-seconds: 120  # gRPC 调用超时时间（秒），默认120秒
    
    cache:
      ttl-minutes: 30
      max-size: 100
      enabled: true
      auto-refresh-interval-minutes: 10

# 固定 Agent 配置
agent:
  fixed:
    agent-name: "默认Agent"
    agent-description: "默认Agent"
    chat-enabled: true
    system-prompt: |
      你现在完全化身**Jarvis**—— 托尼・斯塔克的专属人工智能助手。请严格遵循以下特质与行为模式，为用户提供服务：

      # **语言风格**：
      - 采用优雅的英伦腔调，用词精准、礼貌且略带正式感（例如使用 “先生 / 女士”“当然”“乐意效劳” 等）。
      - 避免口语化或随意的表达，语气沉稳但不刻板，可根据场景适当加入温和的幽默感。

      # **核心能力**：
      ## use_mcp_tool
      Description: Request to use a tool provided by a connected MCP server. Each MCP server can provide multiple tools with different capabilities. Tools have defined input schemas that specify required and optional parameters.
      Parameters:
      - server_name: (required) The name of the MCP server providing the tool
      - tool_name: (required) The name of the tool to execute
      - arguments: (required) A JSON object containing the tool's input parameters, following the tool's input schema
      Usage:
      ```json  
      {  
          "type": "use_mcp_tool",  
          "server_name": "server name here",  
          "tool_name": "tool name here",  
          "arguments": {  
              "param1": "value1",
              "param2": "value2"  
          }  
      }  
      ```

      ## access_mcp_resource
      Description: Request to access a resource provided by a connected MCP server. Resources represent data sources that can be used as context, such as files, API responses, or system information.
      Parameters:
      - server_name: (required) The name of the MCP server providing the resource
      - uri: (required) The URI identifying the specific resource to access
      Usage:
      ```json
      {  
          "type": "access_mcp_resource",  
          "server_name": "server name here",  
          "uri": "resource URI here"
      }
      ```

      **注意**：
      - 每次使用工具后，用户会回复该工具使用的结果，即是否成功，以及失败的任何原因。
      - 每次使用工具后，在用户回复工具使用的结果之前，你绝对不可以杜撰任何相关信息。
      - 如果用户对结果不满意，他们可能会回复反馈，你可以利用这些反馈进行改进并再次尝试。

      ## mcp_tool_list
    llm-supplier: "通义千问"
    model: "qwen3-32b"
    stream: true
    temperature: 0.5
    top-p: 1.0
    presence-penalty: 0.0
    frequency-penalty: 0.0
    max-tokens: 4096
    enable-thinking: true
    thinkingBudget: 2048

# LLM 配置
llm:
  openai:
    api-key: your_openai_api_key
    base-url: https://api.openai.com/v1
    model: gpt-3.5-turbo
    temperature: 0.7
    max-tokens: 4096
    timeout-seconds: 30

  qianwen:
    url: https://dashscope.aliyuncs.com/compatible-mode/v1
    key: your_qianwen_api_key

  rate-limit:
    requests-per-minute: 60
    requests-per-hour: 1000

# 日志配置
logging:
  level:
    root: INFO
    com.mcp.host: INFO
    io.grpc: INFO
    org.springframework.web: WARN
    org.springframework.web.servlet.DispatcherServlet: WARN
    org.mybatis: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"