syntax = "proto3";

package com.mcp.grpc;

option java_multiple_files = true;
option java_package = "com.mcp.grpc";
option java_outer_classname = "McpServiceProto";

// MCP 客户端服务定义
service MCPClientService {
  // 调用 MCP 工具
  rpc CallTool(MCPToolRequest) returns (MCPToolResponse);
  
  // 获取可用工具列表
  rpc GetTools(GetToolsRequest) returns (GetToolsResponse);
  
  // 获取服务器健康状态
  rpc GetServerHealth(GetServerHealthRequest) returns (GetServerHealthResponse);
}

// MCP 工具调用请求
message MCPToolRequest {
  string server_name = 1;
  string tool_name = 2;
  map<string, string> arguments = 3;
}

// MCP 工具调用响应
message MCPToolResponse {
  bool success = 1;
  string result = 2;
  string error = 3;
}

// 获取工具列表请求
message GetToolsRequest {
  // 可选：指定服务器名称
  string server_name = 1;
}

// 获取工具列表响应
message GetToolsResponse {
  repeated MCPTool tools = 1;
}

// MCP 工具信息
message MCPTool {
  string name = 1;
  string description = 2;
  string server_name = 3;
  string input_schema = 4;
  string output_schema = 5;
}

// 获取服务器健康状态请求
message GetServerHealthRequest {
  string server_name = 1;
}

// 获取服务器健康状态响应
message GetServerHealthResponse {
  string server_name = 1;
  bool connected = 2;
  string status = 3;
  int64 last_check_time = 4;
}